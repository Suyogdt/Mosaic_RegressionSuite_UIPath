<Activity mc:Ignorable="sap sap2010 sads" x:Class="LoadDataSource"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="dataSourceName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>LoadDataSource_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="LoadDataSource" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="messageFlag" />
      <Variable x:TypeArguments="x:String" Name="messageText" />
    </Sequence.Variables>
    <Sequence DisplayName="Search Data Source" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_SearchDSField" />
        <Variable x:TypeArguments="x:Boolean" Name="is_SearchDSFieldPresent" />
        <Variable x:TypeArguments="ui:UiElement" Name="element_DataTab" />
      </Sequence.Variables>
      <ui:WaitUiElementAppear DisplayName="find_DataTabElement" FoundElement="[element_DataTab]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_11" WaitActive="False" WaitVisible="False">
        <ui:WaitUiElementAppear.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a65e5f2cd6988c8ac8879f6cc3c6f289" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl aaname='Data' parentid='sidebar' tag='SPAN' /&gt;" WaitForReady="INTERACTIVE" />
        </ui:WaitUiElementAppear.Target>
      </ui:WaitUiElementAppear>
      <ui:Click DelayBefore="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="2000" DisplayName="click_DataTab" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
        <ui:Click.CursorPosition>
          <ui:CursorPosition Position="Center">
            <ui:CursorPosition.OffsetX>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:CursorPosition.OffsetX>
            <ui:CursorPosition.OffsetY>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:CursorPosition.OffsetY>
          </ui:CursorPosition>
        </ui:Click.CursorPosition>
        <ui:Click.Target>
          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[element_DataTab]" WaitForReady="INTERACTIVE" />
        </ui:Click.Target>
      </ui:Click>
      <ui:WaitUiElementAppear DisplayName="UIElement_DSSearchField" FoundElement="[UIElement_SearchDSField]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1" WaitActive="False" WaitVisible="False">
        <ui:WaitUiElementAppear.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="55859e129ab7e7c5f036dea44ae1cf1b" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl parentid='top' tag='INPUT' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
        </ui:WaitUiElementAppear.Target>
      </ui:WaitUiElementAppear>
      <ui:UiElementExists DisplayName="Element Exists" Exists="[is_SearchDSFieldPresent]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_SearchDSField]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <If Condition="[is_SearchDSFieldPresent]" sap2010:WorkflowViewState.IdRef="If_1">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Search DS field present." />
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Load DS NAme :&quot; +dataSourceName]" />
            <ui:TypeInto DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="5000" DelayMS="2000" DisplayName="Type into" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="True" SimulateType="False" Text="[dataSourceName]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_SearchDSField]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;Search DS field exist condition - &quot; +is_SearchDSFieldPresent.ToString]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Report Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Generic\TakeScreenshot.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="ErrorPageName">DS_Search_Field_Exist_Condition</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="SuccessScreenshot">False</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Verify Searched Data Source" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_ActualTextFromSearchedDS" />
        <Variable x:TypeArguments="x:String" Name="actualTextFromSearchedDS" />
      </Sequence.Variables>
      <ui:WaitUiElementAppear DisplayName="UIElement_ActualTextFromSearchedDS" FoundElement="[UIElement_ActualTextFromSearchedDS]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2" WaitActive="False" WaitVisible="False">
        <ui:WaitUiElementAppear.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b234eb89aed83251bea7edc9c6f3d360" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl tag='H5' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
        </ui:WaitUiElementAppear.Target>
      </ui:WaitUiElementAppear>
      <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="aaname" DisplayName="Get attribute" sap2010:WorkflowViewState.IdRef="GetAttribute_1">
        <ui:GetAttribute.Result>
          <OutArgument x:TypeArguments="x:String">[actualTextFromSearchedDS]</OutArgument>
        </ui:GetAttribute.Result>
        <ui:GetAttribute.Target>
          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_ActualTextFromSearchedDS]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
        </ui:GetAttribute.Target>
      </ui:GetAttribute>
      <If Condition="[StrConv(dataSourceName, VbStrConv.LowerCase).Contains(actualTextFromSearchedDS)]" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_33">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="Searched data source name verified successfully." />
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Searched data source name does not verified successfully. Actual : - &quot; +actualTextFromSearchedDS+ &quot; || Expected : - &quot; +dataSourceName]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Generic\TakeScreenshot.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="ErrorPageName">Searched_DS_Name</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="SuccessScreenshot">False</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Load Searched Data Source" sap2010:WorkflowViewState.IdRef="Sequence_5">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_LoadButtonForDS" />
        <Variable x:TypeArguments="x:Boolean" Name="is_LoadButtonExistForDS" />
      </Sequence.Variables>
      <ui:WaitUiElementAppear DisplayName="UIElement_LoadButtonForDS" FoundElement="[UIElement_LoadButtonForDS]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3" WaitActive="True" WaitVisible="True">
        <ui:WaitUiElementAppear.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="5a7670fda5a44315bb7287f098341772" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl parentid='projectListDiv' tag='LI' /&gt;" WaitForReady="INTERACTIVE" />
        </ui:WaitUiElementAppear.Target>
      </ui:WaitUiElementAppear>
      <ui:UiElementExists DisplayName="Element Exists" Exists="[is_LoadButtonExistForDS]" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_LoadButtonForDS]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <If Condition="[is_LoadButtonExistForDS]" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="Load ds button present for data source." />
            <ui:Click ClickType="CLICK_SINGLE" DelayBefore="3000" DelayMS="8000" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_LoadButtonForDS]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_35">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Load ds button for data source exist condition - &quot; +is_LoadButtonExistForDS.ToString]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Generic\TakeScreenshot.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="ErrorPageName">Load_DS_Button</InArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="SuccessScreenshot">False</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Verify Pop Up And Run The Job" sap2010:WorkflowViewState.IdRef="Sequence_14">
      <Sequence.Variables>
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_RunDataSourceGroupPopUp" />
        <Variable x:TypeArguments="x:Boolean" Name="is_RunDataSourcePopUpPresent" />
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_RunDataSourceGroupPopUpHeader" />
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_DataSourceNameOnPopUp" />
        <Variable x:TypeArguments="x:String" Name="actualTextForDSNameOnPopUp" />
        <Variable x:TypeArguments="ui:UiElement" Name="UIElement_RunButtonOnPopUp" />
        <Variable x:TypeArguments="x:Boolean" Name="is_RunButtonPresentOnPopUp" />
        <Variable x:TypeArguments="x:String" Name="successMessageForStartedJob" />
      </Sequence.Variables>
      <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <ui:WaitUiElementAppear DisplayName="UIElement_RunDataSourceGroupPopUp" FoundElement="[UIElement_RunDataSourceGroupPopUp]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_7" WaitActive="True" WaitVisible="True">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="cb877009da53b11209d16a288b98386f" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl parentid='app' tag='DIV' class='modal-content' parentclass='modal-dialog modal-lg' /&gt;" TimeoutMS="5000" WaitForReady="INTERACTIVE" />
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <ui:UiElementExists DisplayName="Element Exists 'DIV'" Exists="[is_RunDataSourcePopUpPresent]" sap2010:WorkflowViewState.IdRef="UiElementExists_8">
        <ui:UiElementExists.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="00175c9821267e2ea8bf8b7e758b89b3" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div' parentid='app' tag='DIV' class='modal-content' parentclass='modal-dialog modal-lg' title='MOSAIC' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
        </ui:UiElementExists.Target>
      </ui:UiElementExists>
      <If Condition="[is_RunDataSourcePopUpPresent]" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="isRunDataSourcePopUpHeaderPresent" />
            </Sequence.Variables>
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="Run data source pop up present on page." />
            <ui:WaitUiElementAppear DisplayName="UIElement_RunDataSourceGroupPopUpHeader" FoundElement="[UIElement_RunDataSourceGroupPopUpHeader]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_8" WaitActive="False" WaitVisible="False">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="b7f4960e21db81d6f1bdfa8b035d1d9a" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl parentid='app' tag='H3' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
            <ui:UiElementExists DisplayName="Element Exists" Exists="[isRunDataSourcePopUpHeaderPresent]" sap2010:WorkflowViewState.IdRef="UiElementExists_6">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_RunDataSourceGroupPopUpHeader]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[isRunDataSourcePopUpHeaderPresent]" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="Run data source group pop up header verified successfully." />
                  <ui:WaitUiElementAppear DisplayName="UIElement_DataSourceNameOnPopUp" FoundElement="[UIElement_DataSourceNameOnPopUp]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_9" WaitActive="False" WaitVisible="False">
                    <ui:WaitUiElementAppear.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="afa12bf1661e387f7a489c1c9bd93c8c" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl tag='STRONG' parentclass='panel-heading' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                    </ui:WaitUiElementAppear.Target>
                  </ui:WaitUiElementAppear>
                  <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="aaname" DisplayName="Get attribute" sap2010:WorkflowViewState.IdRef="GetAttribute_3">
                    <ui:GetAttribute.Result>
                      <OutArgument x:TypeArguments="x:String">[actualTextForDSNameOnPopUp]</OutArgument>
                    </ui:GetAttribute.Result>
                    <ui:GetAttribute.Target>
                      <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_DataSourceNameOnPopUp]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                    </ui:GetAttribute.Target>
                  </ui:GetAttribute>
                  <If Condition="[actualTextForDSNameOnPopUp.Replace(&quot; &quot;,&quot;&quot;).Contains(StrConv(dataSourceName, VbStrConv.LowerCase))]" sap2010:WorkflowViewState.IdRef="If_11">
                    <If.Then>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="Data source name matches with expected on pop up." />
                    </If.Then>
                    <If.Else>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Error" Message="[&quot;Data source name does not verified successfully. Actual is - &quot; +actualTextForDSNameOnPopUp+ &quot; || Expected is - &quot; +dataSourceName]" />
                    </If.Else>
                  </If>
                  <ui:WaitUiElementAppear DisplayName="UIElement_RunButtonOnPopUp" FoundElement="[UIElement_RunButtonOnPopUp]" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_10" WaitActive="False" WaitVisible="False">
                    <ui:WaitUiElementAppear.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="64c70a0c73aa6e70449e7e13a569be75" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl aaname='Run' parentid='app' tag='BUTTON' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                    </ui:WaitUiElementAppear.Target>
                  </ui:WaitUiElementAppear>
                  <ui:UiElementExists DisplayName="Element Exists" Exists="[is_RunButtonPresentOnPopUp]" sap2010:WorkflowViewState.IdRef="UiElementExists_7">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_RunButtonOnPopUp]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                    </ui:UiElementExists.Target>
                  </ui:UiElementExists>
                  <If Condition="[is_RunButtonPresentOnPopUp]" sap2010:WorkflowViewState.IdRef="If_12">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="Run button on pop up present." />
                        <ui:Click ClickType="CLICK_SINGLE" DelayBefore="1000" DelayMS="2000" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[UIElement_RunButtonOnPopUp]" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                          </ui:Click.Target>
                        </ui:Click>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Verify Message" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Generic\Verify_Message.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="expectedMessage">Started the job</InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="flag">[messageFlag]</OutArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_actualMessage">[messageText]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <If Condition="[messageFlag.ToString.Equals(&quot;True&quot;)]" sap2010:WorkflowViewState.IdRef="If_14">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error" Message="[&quot;D_Data_TCNo_003_004_FAILURE :&quot;+messageText]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;D_Data_TCNo_003_004_SUCESS : &quot; +messageText]" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36">
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Error" Message="[&quot;Run button on pop up exist condition - &quot; +is_RunButtonPresentOnPopUp.ToString]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Generic\TakeScreenshot.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="ErrorPageName">Run_Button_On_Load_DS_Popup</InArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="SuccessScreenshot">False</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Error" Message="[&quot;Run data source pop up header exist condition - &quot; +isRunDataSourcePopUpHeaderPresent.ToString]" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Report Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Generic\TakeScreenshot.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ErrorPageName">Header_On_Run_DS_Popup</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="SuccessScreenshot">False</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Error" Message="[&quot;Run data source group pop up exist condition - &quot; +is_RunDataSourcePopUpPresent.ToString]" />
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Verify Message" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Generic\Verify_Message.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="expectedMessage">Datasource is empty</InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="flag">[messageFlag]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_actualMessage">[messageText]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <If Condition="[messageFlag.ToString.Equals(&quot;True&quot;)]" sap2010:WorkflowViewState.IdRef="If_16">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_31">
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;D_Data_TCNo_003_004_SUCESS :&quot;+messageText]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_32">
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Report Log" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Generic\TakeScreenshot.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ErrorPageName">Error_Message_For_Empty_DS</InArgument>
                      <InArgument x:TypeArguments="x:Boolean" x:Key="SuccessScreenshot">False</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Error" Message="[&quot;D_Data_TCNo_003_004_FAILUE :  EMPTY DS should not be loaded&quot; +messageText]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_8">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_37">
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke regressionReport workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Generic\regressionReport.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="folderPath" />
              <InArgument x:TypeArguments="x:String" x:Key="regressionReportPath">[Environment.CurrentDirectory.ToString+"\Reports\Datasource_LoadDataSource_"+System.DateTime.Now.ToString("yyyy_MM_dd_HH_mm_ss")+".txt"]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WaitUiElementAppear_11" sap:VirtualizedContainerService.HintSize="697,106" />
      <sap2010:ViewStateData Id="Click_6" sap:VirtualizedContainerService.HintSize="697,68" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_1" sap:VirtualizedContainerService.HintSize="697,106" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="697,68" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,482">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="697,630" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitUiElementAppear_2" sap:VirtualizedContainerService.HintSize="697,106" />
      <sap2010:ViewStateData Id="GetAttribute_1" sap:VirtualizedContainerService.HintSize="697,96" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_14" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="697,490" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitUiElementAppear_3" sap:VirtualizedContainerService.HintSize="697,106" />
      <sap2010:ViewStateData Id="UiElementExists_2" sap:VirtualizedContainerService.HintSize="697,68" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,323">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="697,490" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WaitUiElementAppear_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,230">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="2229,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="UiElementExists_8" sap:VirtualizedContainerService.HintSize="2229,106" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="1463,91" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_8" sap:VirtualizedContainerService.HintSize="1463,106" />
      <sap2010:ViewStateData Id="UiElementExists_6" sap:VirtualizedContainerService.HintSize="1463,68" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="1080,91" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_9" sap:VirtualizedContainerService.HintSize="1080,106" />
      <sap2010:ViewStateData Id="GetAttribute_3" sap:VirtualizedContainerService.HintSize="1080,96" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="1080,239" />
      <sap2010:ViewStateData Id="WaitUiElementAppear_10" sap:VirtualizedContainerService.HintSize="1080,106" />
      <sap2010:ViewStateData Id="UiElementExists_7" sap:VirtualizedContainerService.HintSize="1080,68" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="697,91" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="697,68" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="697,87" />
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="697,363" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="719,853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_17" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="1080,1001" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="1102,2071">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_16" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="1463,2219" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="1485,2728">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="697,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="697,87" />
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="336,215">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="697,490" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="719,872">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="2229,2876" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_8" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="222,539">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LoadDataSource_1" sap:VirtualizedContainerService.HintSize="262,619">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>