<Activity mc:Ignorable="sap sap2010 sads" x:Class="CreateNewDataSource" this:CreateNewDataSource.randomNo="[new Random().Next(100,9999).ToString]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="projectName" Type="InArgument(x:String)" />
    <x:Property Name="randomNo" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CreateNewDataSource_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CreateNewDataSource" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence DisplayName="Verify_ContentTypeDropDown" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <Sequence.Variables>
        <Variable x:TypeArguments="scg:List(x:String)" Name="get_DropDownValues" />
        <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="list_item" />
        <Variable x:TypeArguments="x:Int32" Name="element_counter" />
        <Variable x:TypeArguments="x:Boolean" Name="is_DifferentFlag" />
        <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="setExpected_List" />
      </Sequence.Variables>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_LoginApp" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="LoginPage\LoginToApp.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_CreateProject" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ProjectPage\CreateProject.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <OutArgument x:TypeArguments="x:String" x:Key="projectName">[projectName]</OutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="randomNo">[randomNo]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_SelectProject" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ProjectPage\SelectProject.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="projectName">[projectName]</InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign DisplayName="ExpectedList" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[setExpected_List]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[{"Delimited file","RDBMS","TSV","CSV","Excel sheet","Fixed length format","FTP/SFTP","REMOTE_DATA","NOSQL"}]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[setExpected_List]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="AddValuesToList" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:GenericValue" Name="result" />
                <Variable x:TypeArguments="x:String" Default="[item.Replace(&quot; &quot;,&quot;_&quot;)]" Name="getListValue" />
              </Sequence.Variables>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_CreateNewDS" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="DataSourcePage\CreateNewDS.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="x:String" x:Key="dataSourceName" />
                  <InArgument x:TypeArguments="x:String" x:Key="randomNo">[randomNo]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="projectName">[projectName]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="dSTypeFromUser" />
                  <InArgument x:TypeArguments="x:String" x:Key="ds_List">[getListValue]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_ConfigurationTab" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="DataSourcePage\ConfigurationTab.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="2000" DelayBefore="2000" DisplayName="select_ContentType" sap2010:WorkflowViewState.IdRef="SelectItem_1" Item="[item]">
                <ui:SelectItem.Items>
                  <scg:List x:TypeArguments="x:String" Capacity="16">
                    <x:String>Select data source type</x:String>
                    <x:String>Delimited file</x:String>
                    <x:String>RDBMS</x:String>
                    <x:String>TSV</x:String>
                    <x:String>CSV</x:String>
                    <x:String>Excel sheet</x:String>
                    <x:String>Fixed length format</x:String>
                    <x:String>FTP/SFTP</x:String>
                    <x:String>REMOTE_DATA</x:String>
                    <x:String>NOSQL</x:String>
                  </scg:List>
                </ui:SelectItem.Items>
                <ui:SelectItem.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="6db505df9009c0f0d9114efec68a707f" Selector="&lt;html app='chrome.exe' title='MOSAIC' /&gt;&lt;webctrl parentid='connectionForm' tag='SELECT' /&gt;" WaitForReady="INTERACTIVE" />
                </ui:SelectItem.Target>
              </ui:SelectItem>
              <If Condition="[item.ToString.Trim.Equals(&quot;Delimited file&quot;)]" DisplayName="GetListValue=&quot;Delimited File&quot;" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_DelimitedDS" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="DataSourcePage\Delimited_DS.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[item]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="Not Delimited File : Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;RDBMS&quot;)]" DisplayName="GetListValue=&quot;RDBMS&quot;" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_RDBMS" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="DataSourcePage\RDBMS_DS.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <scg:Dictionary x:TypeArguments="x:String, Argument" />
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="Not RDBMS file : Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;TSV&quot;)]" DisplayName="GetListValue=&quot;TSV&quot;" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_TSVDS" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="DataSourcePage\TSV_DS.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[item]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="Not TSV file : Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;CSV&quot;)]" DisplayName="GetListValue=&quot;CSV&quot;" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_CSVDS" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="DataSourcePage\CSV_DS.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[item]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="Not CSV file : Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;Excel sheet&quot;)]" DisplayName="GetListValue=&quot;Excel Sheet&quot;" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Then>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="call_ExcelDS" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="DataSourcePage\Excel_DS.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[item]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Trace" Message="Not Excel file : Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;Fixed length format&quot;)]" DisplayName="GetListValue=&quot;Fixed length format&quot;" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[getListValue]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Trace" Message="Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;FTP/SFTP&quot;)]" DisplayName="GetListValue=&quot;FTP/SFTP&quot;" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Then>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[getListValue]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;REMOTE_DATA&quot;)]" DisplayName="GetListValue=&quot;REMOTE_DATA&quot;" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Then>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[getListValue]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Trace" Message="Checking Next If Loop" />
                </If.Else>
              </If>
              <If Condition="[item.ToString.Trim.Equals(&quot;NOSQL&quot;)]" DisplayName="GetListValue=&quot;NOSQL&quot;" sap2010:WorkflowViewState.IdRef="If_12">
                <If.Then>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[getListValue]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Trace" Message="Checking Next If Loop" />
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <sads:DebugSymbol.Symbol>d2dEOlxNb3NhaWNfUmVncmVzc2lvblN1aXRlX1VJUGF0aDFcTW9zYWljX1JlZ3Jlc3Npb25TdWl0ZV9VSVBhdGhcRGF0YVNvdXJjZVBhZ2VcQ3JlYXRlTmV3RGF0YVNvdXJjZS54YW1sWQFrAZIBAQJGA/UBDgIBAUcF8wEQAgECTwdTHwIBclQHWR8CAWxaB14fAgFoXwdmEAIBZGcH8gEUAgEDT6wBT8cBAgFzVkdWVAIBcFdDV00CAW5UsQFU0QECAW1cRlxTAgFqWrEBWtEBAgFpZDRkoQECAWdhRGFWAgFlZ3pnjgECAWJtDe8BGAIBBHA+cGsCAQVyD3onAgFaew9/JwIBWIABD5IBHwIBUpMBD54BFAIBSZ8BD6oBFAIBQqsBD7YBFAIBObcBD8IBFAIBMMMBD84BFAIBJ88BD9YBFAIBH9cBD94BFAIBF98BD+YBFAIBD+cBD+4BFAIBB3hKeFgCAWB2TnZbAgFedUt1VQIBXHK3AXLYAQIBW3u8AXviAQIBWYABRIABSgIBVoABV4ABXQIBVYABswGAAbsBAgFTkAGiAZABigICAVeTAR2TAVYCAUqVAROZASsCAU6cAROcAbABAgFMnwEdnwFNAgFDoQETpQErAgFHqAETqAGsAQIBRasBHasBSwIBOq0BE7EBKwIBPrQBE7QBqgECATy3AR23AUsCATG5ARO9ASsCATXAARPAAaoBAgEzwwEdwwFTAgEoxQETyQErAgEszAETzAGtAQIBKs8BHc8BWwIBINEBE9EBkwECASTUARPUAZwBAgEi1wEd1wFQAgEY2QET2QGUAQIBHNwBE9wBnAECARrfAR3fAVMCARDhARPhAZQBAgEU5AET5AGcAQIBEucBHecBTQIBCOkBE+kBlAECAQzsARPsAZwBAgEKlwFSlwFYAgFQlQG7AZUB3QECAU+cAYEBnAGtAQIBTaEBtQGhAdMBAgFIqAGBAagBqQECAUavAVKvAVgCAUCtAbUBrQHRAQIBP7QBgQG0AacBAgE9uwFSuwFYAgE3uQG2AbkB0gECATbAAYEBwAGnAQIBNMcBUscBWAIBLsUBuAHFAdYBAgEtzAGCAcwBqgECASvRAYAB0QGQAQIBJdQBggHUAZkBAgEj2QGBAdkBkQECAR3cAYIB3AGZAQIBG+EBgQHhAZEBAgEV5AGCAeQBmQECARPpAYEB6QGRAQIBDewBggHsAZkBAgEL</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="691,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="653,87" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="653,87" />
      <sap2010:ViewStateData Id="SelectItem_1" sap:VirtualizedContainerService.HintSize="653,134" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="675,3023">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="691,3157" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="713,3762">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="735,3886">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateNewDataSource_1" sap:VirtualizedContainerService.HintSize="775,4366" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>